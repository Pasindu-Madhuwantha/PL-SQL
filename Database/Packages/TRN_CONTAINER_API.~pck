create or replace package TRN_CONTAINER_API is

function GET_CONTAINER_VOLUME(CONTAINER_ID_ IN VARCHAR2) RETURN NUMBER;
function GET_CONTAINER_WEIGHT(CONTAINER_ID_ IN VARCHAR2) RETURN NUMBER;
PROCEDURE NEW_RECORD(REC_ IN TRN_CONTAINER_TAB%ROWTYPE);
PROCEDURE UPDATE_RECORD(REC_ IN TRN_CONTAINER_TAB%ROWTYPE);
PROCEDURE DELETE_RECORD(CONTAINER_ID_ IN TRN_CONTAINER_TAB.CONTAINERID%TYPE);
end TRN_CONTAINER_API;
/
create or replace package body TRN_CONTAINER_API is

function GET_CONTAINER_VOLUME(CONTAINER_ID_ IN VARCHAR2) RETURN NUMBER IS
 result NUMBER(8,2);
 
 CURSOR GET_CONTAINER_VOLUME IS
 SELECT VOLUME FROM TRN_CONTAINER_TAB WHERE CONTAINERID = CONTAINER_ID_;
 BEGIN
      OPEN GET_CONTAINER_VOLUME;
      FETCH GET_CONTAINER_VOLUME INTO result;
      CLOSE GET_CONTAINER_VOLUME;
      
      RETURN result;
 END GET_CONTAINER_VOLUME;
 
 
 function GET_CONTAINER_WEIGHT(CONTAINER_ID_ IN VARCHAR2) RETURN NUMBER IS
 result NUMBER(8,2);
 
 CURSOR GET_CONTAINER_WEIGHT IS
 SELECT HOLDINGWEIGHT FROM TRN_CONTAINER_TAB WHERE CONTAINERID = CONTAINER_ID_;
 BEGIN
      OPEN GET_CONTAINER_WEIGHT;
      FETCH GET_CONTAINER_WEIGHT INTO result;
      CLOSE GET_CONTAINER_WEIGHT;
      
      RETURN result;
 END GET_CONTAINER_WEIGHT;
 
 
 PROCEDURE NEW_RECORD(REC_ IN TRN_CONTAINER_TAB%ROWTYPE) IS
  BEGIN
    INSERT INTO TRN_CONTAINER_TAB VALUES REC_;
  
  END NEW_RECORD;

 PROCEDURE UPDATE_RECORD(REC_ IN TRN_CONTAINER_TAB%ROWTYPE) IS
  
  BEGIN
    UPDATE TRN_CONTAINER_TAB 
    SET VOLUME = REC_.VOLUME,
        HOLDINGWEIGHT = REC_.HOLDINGWEIGHT
    WHERE CONTAINERID = REC_.CONTAINERID;
  
  END UPDATE_RECORD;
  
  
  PROCEDURE DELETE_RECORD(CONTAINER_ID_ IN TRN_CONTAINER_TAB.CONTAINERID%TYPE) IS
  BEGIN
   DELETE TRN_CONTAINER_TAB
   WHERE CONTAINERID = CONTAINER_ID_;
  END DELETE_RECORD;
  
end TRN_CONTAINER_API;
/
